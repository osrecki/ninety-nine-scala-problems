<scalastyle>

  <name>Scalastyle configuration</name>

  <!-- Naming Conventions -->
  <check class="org.scalastyle.scalariform.ClassNamesChecker" level="error" enabled="true">
    <parameters>
      <parameter name="regex">^[A-Z][A-Za-z0-9]*$</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.ObjectNamesChecker" level="error" enabled="true">
    <parameters>
      <parameter name="regex">^[A-Z][A-Za-z0-9]*$</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.PackageObjectNamesChecker" level="error" enabled="true">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z]*$</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MethodNamesChecker" level="error" enabled="true">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z0-9]*(_=)?$</parameter>
    </parameters>
  </check>
  <!-- Does not work for tuple and object destructuring -->
  <check class="org.scalastyle.scalariform.FieldNamesChecker" level="error" enabled="false">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z]*$</parameter>
    </parameters>
  </check>

  <!-- Indentation -->
  <check class="org.scalastyle.file.FileTabChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.file.IndentationChecker" level="error" enabled="true">
    <parameters>
      <parameter name="tabSize">2</parameter>
      <parameter name="methodParamIndentSize">2</parameter>
    </parameters>
  </check>

  <!-- Whitespace -->
  <check class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.SpacesBeforePlusChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.SpacesAfterPlusChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.file.WhitespaceEndOfLineChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.file.NewLineAtEofChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" level="error" enabled="true">
    <parameters>
      <parameter name="tokens">EQUALS, ELSE, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" level="error" enabled="true">
    <parameters>
      <parameter name="tokens">ARROW, EQUALS, COMMA, COLON, IF, ELSE, DO, WHILE, FOR, MATCH, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>
    </parameters>
  </check>

  <!-- Imports -->
  <check class="org.scalastyle.scalariform.ImportGroupingChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.ImportOrderChecker" level="error" enabled="true" >
    <parameters>
      <parameter name="groups">java,scala,other</parameter>
      <parameter name="group.java">javax?\..+</parameter>
      <parameter name="group.scala">scala\..+</parameter>
      <parameter name="group.other">.+</parameter>
    </parameters>
  </check>

  <!-- Types -->
  <check class="org.scalastyle.scalariform.EmptyClassChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.EqualsHashCodeChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.CovariantEqualsChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.NoCloneChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.NoFinalizeChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.StructuralTypeChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.NumberOfTypesChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxTypes">30</parameter>
    </parameters>
  </check>

  <!-- Methods -->
  <check class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.ReturnChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.ProcedureDeclarationChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.ParameterNumberChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxParameters">4</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MethodLengthChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxLength">50</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.CyclomaticComplexityChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maximum">10</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxMethods">30</parameter>
    </parameters>
  </check>

  <!-- Control Structures -->
  <check class="org.scalastyle.scalariform.WhileChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" level="error" enabled="true"/>
  <!-- Enforces alignment on multi-line cases as well -->
  <check class="org.scalastyle.scalariform.PatternMatchAlignChecker" level="error" enabled="false"/>
  <check class="org.scalastyle.scalariform.IfBraceChecker" level="error" enabled="true">
    <parameters>
      <parameter name="singleLineAllowed">true</parameter>
      <parameter name="doubleLineAllowed">true</parameter>
    </parameters>
  </check>

  <!-- Values -->
  <check class="org.scalastyle.scalariform.NullChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.UppercaseLChecker" level="error" enabled="true"/>
  <check class="org.scalastyle.scalariform.MagicNumberChecker" level="error" enabled="true">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
    </parameters>
  </check>

  <!-- Lengths -->
  <check class="org.scalastyle.file.FileLengthChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxFileLength">800</parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.file.FileLineLengthChecker" level="error" enabled="true">
    <parameters>
      <parameter name="maxLineLength">120</parameter>
      <parameter name="tabSize">2</parameter>
    </parameters>
  </check>

</scalastyle>
